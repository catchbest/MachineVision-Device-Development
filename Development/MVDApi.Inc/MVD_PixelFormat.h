#ifndef __MVD_PIXEL_FORMAT_H__
#define __MVD_PIXEL_FORMAT_H__

// Pixel Format(4字节) = Color/Mono(1字节，bit31-bit24) + Bits per pixel（1字节，bit23-bit16） + Pixel ID（2字节，bit0-bit15）

#define MVD_PIX_COLOR_MONO       0x01000000
#define MVD_PIX_COLOR_RGB        0x02000000    // deprecated in version 1.1
#define MVD_PIX_COLOR_COLOR      0x02000000
#define MVD_PIX_COLOR_CUSTOM     0x80000000
#define MVD_PIX_COLOR_MASK       0xFF000000

#define MVD_PIX_BITS_1           0x00010000    // 每个像素占1个bit位
#define MVD_PIX_BITS_2           0x00020000    // 每个像素占2个bit位
#define MVD_PIX_BITS_4           0x00040000
#define MVD_PIX_BITS_8           0x00080000
#define MVD_PIX_BITS_12          0x000C0000
#define MVD_PIX_BITS_16          0x00100000
#define MVD_PIX_BITS_24          0x00180000
#define MVD_PIX_BITS_32          0x00200000
#define MVD_PIX_BITS_36          0x00240000
#define MVD_PIX_BITS_48          0x00300000    // 每个像素占48个bit位
#define MVD_PIX_BITS_MASK        0x00FF0000

#define MVD_PIX_ID_MASK          0x0000FFFF

#define GET_PIX_FORMAT_BITS(PixelFormat)    ((PixelFormat & MVD_PIX_BITS_MASK) >> 16)

// 如下像素格式的定义参考了GigE Vision (2.0.03)的规范
enum MVD_PIXEL_FORMAT
{
	PIXEL_FORMAT_UNKNOWN = 0x00000000,

	// 27.1 Mono buffer format defines
	PIXEL_FORMAT_MONO1P = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_1 | 0x0037),
	PIXEL_FORMAT_MONO2P = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_2 | 0x0038),
	PIXEL_FORMAT_MONO4P = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_4 | 0x0039),
	PIXEL_FORMAT_MONO8  = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_8 | 0x0001),     // 0x01080001
	PIXEL_FORMAT_MONO8S = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_8 | 0x0002),
	PIXEL_FORMAT_MONO10 = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_16 | 0x0003),
	PIXEL_FORMAT_MONO10_PACKED = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_12 | 0x0004),
	PIXEL_FORMAT_MONO12 = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_16 | 0x0005),
	PIXEL_FORMAT_MONO12_PACKED = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_12 | 0x0006),
	PIXEL_FORMAT_MONO14 = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_16 | 0x0025),
	PIXEL_FORMAT_MONO16 = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_16 | 0x0007),

	// 27.2 Bayer buffer format defines
	PIXEL_FORMAT_BAYGR8 = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_8 | 0x0008),
	PIXEL_FORMAT_BAYRG8 = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_8 | 0x0009),
	PIXEL_FORMAT_BAYGB8 = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_8 | 0x000A),
	PIXEL_FORMAT_BAYBG8 = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_8 | 0x000B),
	PIXEL_FORMAT_BAYGR10 = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_16 | 0x000C),
	PIXEL_FORMAT_BAYRG10 = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_16 | 0x000D),
	PIXEL_FORMAT_BAYGB10 = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_16 | 0x000E),
	PIXEL_FORMAT_BAYBG10 = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_16 | 0x000F),
	PIXEL_FORMAT_BAYGR12 = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_16 | 0x0010),
	PIXEL_FORMAT_BAYRG12 = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_16 | 0x0011),
	PIXEL_FORMAT_BAYGB12 = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_16 | 0x0012),
	PIXEL_FORMAT_BAYBG12 = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_16 | 0x0013),
	PIXEL_FORMAT_BAYGR10_PACKED = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_12 | 0x0026),
	PIXEL_FORMAT_BAYRG10_PACKED = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_12 | 0x0027),
	PIXEL_FORMAT_BAYGB10_PACKED = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_12 | 0x0028),
	PIXEL_FORMAT_BAYBG10_PACKED = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_12 | 0x0029),
	PIXEL_FORMAT_BAYGR12_PACKED = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_12 | 0x002A),
	PIXEL_FORMAT_BAYRG12_PACKED = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_12 | 0x002B),
	PIXEL_FORMAT_BAYGB12_PACKED = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_12 | 0x002C),
	PIXEL_FORMAT_BAYBG12_PACKED = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_12 | 0x002D),
	PIXEL_FORMAT_BAYGR16 = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_16 | 0x002E),
	PIXEL_FORMAT_BAYRG16 = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_16 | 0x002F),
	PIXEL_FORMAT_BAYGB16 = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_16 | 0x0030),
	PIXEL_FORMAT_BAYBG16 = (MVD_PIX_COLOR_MONO | MVD_PIX_BITS_16 | 0x0031),

	// 27.3 RGB Packed buffer format defines
	PIXEL_FORMAT_RGB8 = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_24 | 0x0014),
	PIXEL_FORMAT_BGR8 = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_24 | 0x0015),
	PIXEL_FORMAT_RGBA8 = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_32 | 0x0016),
	PIXEL_FORMAT_BGRA8 = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_32 | 0x0017),
	PIXEL_FORMAT_RGB10 = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_48 | 0x0018),
	PIXEL_FORMAT_BGR10 = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_48 | 0x0019),
	PIXEL_FORMAT_RGB12 = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_48 | 0x001A),
	PIXEL_FORMAT_BGR12 = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_48 | 0x001B),
	PIXEL_FORMAT_RGB16 = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_48 | 0x0033),
	PIXEL_FORMAT_RGB10V1_PACKED = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_32 | 0x001C),
	PIXEL_FORMAT_RGB10P32 = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_32 | 0x001D),
	PIXEL_FORMAT_RGB12V1_PACKED = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_36 | 0X0034),
	PIXEL_FORMAT_RGB565P = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_16 | 0x0035),
	PIXEL_FORMAT_BGR565P = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_16 | 0X0036),

	// 27.4 YUV and YCbCr Packed buffer format defines
	PIXEL_FORMAT_YUV411_8_UYYVYY = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_12 | 0x001E),
	PIXEL_FORMAT_YUV422_8_UYVY = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_16 | 0x001F),
	PIXEL_FORMAT_YUV422_8 = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_16 | 0x0032),
	PIXEL_FORMAT_YUV8_UYV = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_24 | 0x0020),
	PIXEL_FORMAT_YCBCR8_CBYCR = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_24 | 0x003A),
	PIXEL_FORMAT_YCBCR422_8 = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_16 | 0x003B),
	PIXEL_FORMAT_YCBCR422_8_CBYCRY = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_16 | 0x0043),
	PIXEL_FORMAT_YCBCR411_8_CBYYCRYY = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_12 | 0x003C),
	PIXEL_FORMAT_YCBCR601_8_CBYCR = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_24 | 0x003D),
	PIXEL_FORMAT_YCBCR601_422_8 = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_16 | 0x003E),
	PIXEL_FORMAT_YCBCR601_422_8_CBYCRY = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_16 | 0x0044),
	PIXEL_FORMAT_YCBCR601_411_8_CBYYCRYY = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_12 | 0x003F),
	PIXEL_FORMAT_YCBCR709_8_CBYCR = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_24 | 0x0040),
	PIXEL_FORMAT_YCBCR709_422_8 = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_16 | 0x0041),
	PIXEL_FORMAT_YCBCR709_422_8_CBYCRY = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_16 | 0x0045),
	PIXEL_FORMAT_YCBCR709_411_8_CBYYCRYY = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_12 | 0x0042),

	//27.5 RGB Planar buffer format defines
	PIXEL_FORMAT_RGB8_PLANAR = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_24 | 0x0021),
	PIXEL_FORMAT_RGB10_PLANAR = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_48 | 0x0022),
	PIXEL_FORMAT_RGB12_PLANAR = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_48 | 0x0023),
	PIXEL_FORMAT_RGB16_PLANAR = (MVD_PIX_COLOR_COLOR | MVD_PIX_BITS_48 | 0x0024),
};


#endif